server {
    listen 443 ssl;
    server_name recetas.intperico.online;

    ssl_certificate /etc/letsencrypt/live/recetas.intperico.online/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/recetas.intperico.online/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    location /static/ {
        alias /app/staticfiles/;
    }

    location /media/ {
        alias /app/media/;
    }

    location / {
        proxy_pass http://django:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto https;  # Este encabezado es clave
    }
}

server {
    listen 80;
    server_name recetas.intperico.online;

    # Redirige todo HTTP a HTTPS
    return 301 https://$host$request_uri;
}

# server {
#     listen 80;
    
#     server_name localhost;  # Cambiá esto al dominio que usarás en producción
    
#     # Manejar archivos MEDIA
#     location /media/ {
#         alias /app/media/;  # Ruta al directorio de medios dentro del contenedor Django
#         autoindex on;       # Muestra un índice de archivos si es necesario (opcional)
#     }

#     # Manejar archivos STATIC
#     location /static/ {
#         alias /app/staticfiles/;  # Ruta al directorio de archivos estáticos
#     }

#     # Proxy inverso para Gunicorn
#     location / {
#         proxy_pass http://django:8000;  # Apunta al servicio Django definido en docker-compose
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     }
# }
